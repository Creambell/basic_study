<html xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        @font-face {
            font-weight: normal;
            font-style: normal;
        }
        /* 기본 스타일 설정 */
        body {
            margin: 0;
            padding: 0;
            display: flex;	
        }
        /* 사이드바 스타일 설정 */
        .sidebar {
            width: 300px;
            background-color: #333;
            color: white;
            padding: 20px;
            height: 100%;
            border-radius: 15px;
            margin-top: 40px;
            margin-left: 60px;
            font-size: 18px; 
        }
        .sidebar h3 {
            text-align: center;
            margin-bottom: 20px;
        }
        .sidebar ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }
        .sidebar li {
            padding: 10px 20px;
            border-bottom: 1px solid #555;
        }
        .sidebar a {
            color: white;
            text-decoration: none;
        }
        .sidebar .active {
            font-weight: bold;
            font-size: 1.1em;
        }
        /* 메인 컨텐츠 스타일 설정 */
        .main-container {
        	margin-bottom: 120px;
            width: 100%;
            flex-grow: 1;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            
           	margin-bottom: 120px;
            
        }
        .container {
            width: 100% !important;	
            margin-top: 20px;
            margin-left: -50px;
            padding-top: 30px;
            padding-bottom: 30px;
            padding-right: 30px !important;
            padding-left: 30px !important;
            background-color: white;
            border-radius: 10px;
            height: 100%;
            display: table;
        }
        #board-title {
            border-left: 5px solid black;
            padding-left: 10px;
            display: inline-block;
            margin-bottom: 15px;
        }
        /* 테이블 스타일 설정 */
        .table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        .table th, .table td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
            display: table-cell;
            height: 17px;
            vertical-align: middle;
            font-size: 16px;
        }
        .table th {
            background-color: #f2f2f2;
        }
        .table-group-divider {
            border-top: 2px solid gray;
        }
        /* 체크박스 스타일 설정 */
        .form-check-input {
            transform: scale(1);
            accent-color: #FF6347;
        }
        /* 버튼 스타일 설정 */
        button {
            color: #fff;
            padding: 10px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
        }
        #update_button {
            background-color: #FFB74D;
        }
        #delete_button {
            background-color: #E57373;
        }
        .buttons-container {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-bottom: 20px;
        }
        /* 페이지네이션 스타일 설정 */
        .pagination-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
        }
        .pagination-container .prev-button,
        .pagination-container .next-button,
        .pagination-container .number-button-wrapper {
            padding: 10px;
            cursor: pointer;
        }
        /* 검색 영역 스타일 설정 */
        .search-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 20px;
        }
        .search-container select,
        .search-container .search,
        .search-container .search-button {
            height: 40px;
            margin-right: 10px;
        }
        .search-container select {
            width: 100px;
        }
        .search input {
            width: 200px;
            border: 1px solid #bbb;
            border-radius: 5px;
            padding: 10px 12px;
            font-size: 14px;
        }
        .search-button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 0 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
        }
        .yes-or-no {
            border-radius: 5px;
            height: 35px;
        }
        a.dropdown-item:hover, .dropdown-item:active {
            background-color: grey;	
        }
    </style>
    <title>방문자 게시판</title>
</head>
<body>
    <div th:replace="~{common/header :: header}"></div>
    <!-- 사이드바 -->
    <aside class="sidebar">
        <h3>관리자메뉴</h3>
        <ul>
            <li><a href="#">방문자게시판</a></li>
            <li><a href="#">Image</a></li>
            <li><a href="#">Spring</a></li>
            <li><a href="#">Java</a></li>
            <li><a href="#">JavaScript</a></li>
            <li><a href="#" class="active">Error 모음집</a></li>
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                    회원정보수정
                </a>
                <ul class="dropdown-menu" aria-labelledby="userDropdown" style="background-color: grey;">
                    <li><a class="dropdown-item" href="#">회원관리</a></li>
                    <li><a class="dropdown-item" href="#">게시글 관리</a></li>
                    <li><a class="dropdown-item" href="#">댓글 관리</a></li>
                    <!--회원이 다른 게시글이나 댓글을 신고할 수 있다. 신고하면 카운트가 쌓이고, 이걸 정리하는 곳.-->
                    <!--신고당한 게시글, 댓글은 테이블에 분류된다. 신고처리가 5번 이상이면 회원 이름 부분이 빨간 색으로 변함-->
                    <!--5번 이상인 회원은 탈퇴처리되게 함. -->
                    <!--블로그에 들어가면 팝업이 떠서 신고누적으로 인한 탈퇴처리 안내함. -->
                    <!--공지와 관련한 별도 게시판도 하나 만들자. -->
                    <!-- 팝업은 팝업인데, 그간 누적된 공지 보여주는 게시판도 하나 있긴 해야할거같음. -->
                    <li><a class="dropdown-item" href="#">신고 처리</a></li> 
                </ul>
            </li>
        </ul>	
    </aside>
    <!-- 메인 컨텐츠 -->
    <article class="main-container">
        <div class="container">
            <h2 id="board-title"> 회원 관리</h2>
            
            <!-- 내 정보 -->
<!--             <table class="my table"> -->
<!--             	<thead> -->
<!--                     <tr>  -->
<!--                         <th scope="col" style="width: 5%;">회원 ID</th> -->
<!--                         <th scope="col" style="width: 5%;">이름</th> -->
<!--                         <th scope="col" style="width: 10%">이메일</th> -->
<!--                         <th scope="col" style="width: 6%;">작성한 글</th> -->
<!--                         <th scope="col" style="width: 6%">작성한 댓글</th> -->
<!--                         <th scope="col" style="width: 8%">활성화 여부</th> -->
<!--                         <th scope="col" style="width: 8%">블로거 여부</th> -->
<!--                         <th scope="col" style="width: 10%">가입일자</th> -->
<!--                     </tr> -->
<!--                 </thead> -->
<!-- 	            	<tr> -->
<!--                         <td>[[${session.loginUser.userId}]]</td> -->
<!--                         <td>[[${session.loginUser.userName}]]</td> -->
<!--                         <td>[[${session.loginUser.userEmail}]]</td> -->
<!--                         <td>[[${session.loginUser.postCount}]]개</td> -->
<!--                         <td>[[${session.loginUser.replyCount}]]개</td> -->
<!--                         <td> -->
<!--                             <button class="yes-or-no" style="background-color:green">Y</button> -->
<!--                             <button class="yes-or-no" style="background-color:red">N</button> -->
<!--                         </td> -->
<!--                         <td> -->
<!--                             <button class="yes-or-no" style="background-color:green">Y</button> -->
<!--                             <button class="yes-or-no" style="background-color:red">N</button> -->
<!--                         </td> -->
<!--                         <td>[[${session.loginUser.userJoinDate}]]</td> -->
<!--                   </tr> -->
<!--             </table> -->
<!--             <br><hr><br> -->
            
            <!-- 회원 정보 -->
            <table class="table">
                <thead>
                    <tr> 
                        <th scope="col" style="width: 3%"><input class="form-check-input" type="checkbox" id="checkAll"></th>
                        <th scope="col" style="width: 5%;">회원 ID</th>
                        <th scope="col" style="width: 5%;">이름</th>
                        <th scope="col" style="width: 10%">이메일</th>
                        <th scope="col" style="width: 6%;">작성한 글</th>
                        <th scope="col" style="width: 6%">작성한 댓글</th>
                        <th scope="col" style="width: 8%">회원 상태</th>
                        <th scope="col" style="width: 6%">블로거 설정</th>
                        <th scope="col" style="width: 10%">가입일자</th>
                    </tr>
                </thead>
                <tbody class="table-group-divider">
                    <tr th:each="m:${list}" >
                        <td><input class="form-check-input" type="checkbox" value="" id="flexCheckDefault"></td>
                        <td>[[${m.userId}]]</td>
                        <td>[[${m.userName}]]</td>
                        <td>[[${m.userEmail}]]</td>
                        <td>[[${m.postCount}]]개</td>
                        <td>[[${m.replyCount}]]개</td>
                        <td>
                       <div class="form-check form-switch">
					        <input class="form-check-input status-switch" id="statusSwitch" type="checkbox" role="switch" style="background-color: orange; border:grey;" 
					               
					               th:id="${'flexSwitchCheck' + m.userId}"
					               
					               th:checked="${m.userStatus == 'Y'}"
					               
					               th:data-userId="${m.userId}"
					               >
					        <label class="form-check-label" th:for="${'flexSwitchCheck' + m.userId}">
					            활성화 여부
					        </label>
					    </div>
                        </td>
                        <td>
                            <input class="form-check-input admin-switch" id="adminSwitch" type="checkbox"  style="background-color: orange; border:grey; zoom:1.7;" 
					               
					               th:id="${'flexSwitchCheck' + m.userId}"
					               
					               th:checked="${m.isAdmin == 'Y'}"
					               
					               th:data-userId="${m.userId}"
					               >
                        </td>
                        <td>[[${m.userJoinDate}]]</td>
                    </tr>

                </tbody>
            </table>
            
            <!--  모달 -->
         	 <div class="buttons-container">
                <button class="btn btn-success" type="button" id="write_button">저장</button>
                <!-- Button trigger modal -->
                <button id="delete_button" type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#statusModal">
                    탈퇴
                </button>
            <!-- userStatus 상태 변경  -->
                <div class="modal fade" id="statusModal" tabindex="-1" aria-labelledby="statusModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="statusModalLabel"><i class="fa-solid fa-triangle-exclamation fa-beat"></i> 경고</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                회원의 상태를 변경하시겠습니까?	
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary" style="background-color: #FF5733; border: #FF5733;">네. 변경하겠습니다.</button>
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" style="background-color: grey;border: grey;">아니요.</button>
                            </div>
                        </div>
                    </div>
                </div>
                
				<!-- isAdmin 권한 부여 -->                
                <div class="modal fade" id="statusModal" tabindex="-1" aria-labelledby="statusModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="statusModalLabel"><i class="fa-solid fa-triangle-exclamation fa-beat"></i> 경고</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                해당 회원에게 블로거 권한을 부여하시겠습니까?	
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary" style="background-color: #FF5733; border: #FF5733;">네. 부여하겠습니다.</button>
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" style="background-color: grey;border: grey;">아니요.</button>
                            </div>
                        </div>
                    </div>
                </div>
                
            </div>
		            
            <div class="search-container">
                <div class="search">
                    <input type="text" placeholder="이름으로 검색해주세요.">
                </div>
                <button class="search-button">검색</button>
           </div>

            <div class="pagination-container">
			    <nav aria-label="Standard pagination example" style="float: right; margin-right:350px;">
			        <ul class="pagination">
			            <li class="page-item" th:classappend="${pi.currentPage == 1} ? 'disabled'">
			                <a class="page-link" th:href="@{/adminPage.ad(page=${pi.currentPage - 1})}" aria-label="Previous">
			                    <span aria-hidden="true">&laquo;</span>
			                </a>
			            </li>
			            <li class="page-item" th:each="p : ${#numbers.sequence(pi.startPage, pi.endPage)}" 
			                th:classappend="${p == pi.currentPage} ? 'active'">
			                <a class="page-link" th:href="@{/adminPage.ad(page=${p})}" th:text="${p}"></a>
			            </li>
			            <li class="page-item" th:classappend="${pi.currentPage == pi.maxPage} ? 'disabled'">
			                <a class="page-link" th:href="@{/adminPage.ad(page=${pi.currentPage + 1})}" aria-label="Next">
			                    <span aria-hidden="true">&raquo;</span>
			                </a>
			            </li>
			        </ul>
			    </nav>    
			</div>
		</div>
    </article>    
  	<div th:replace="~{common/footer :: footer}"></div>
    
    
    <script>
    
    document.addEventListener('DOMContentLoaded', function() {
        const statusSwitches = document.querySelectorAll('.status-switch');
        
        const modal = new bootstrap.Modal(document.getElementById('statusModal'));
        
        let currentSwitch = null;

        statusSwitches.forEach(statusSwitch => {
            statusSwitch.addEventListener('click', function(e) {
                e.preventDefault();
                currentSwitch = this;
                modal.show();
            });
        });

        // 모달의 "네" 버튼에 이벤트 리스너 추가
        const confirmButton = document.querySelector('#statusModal .btn-primary');
        confirmButton.onclick = () => {
            if (currentSwitch) {
                const userId = currentSwitch.getAttribute('data-userId');
                const newStatus = currentSwitch.checked ? 'N' : 'Y';

                // AJAX 요청
                $.ajax({
                    url: 'updateMemberStatus.adm',
                    method: 'POST',
                    data: {
                        userId: userId,
                        userStatus: newStatus
                    },
                    success: function(response) {
                        if (response === 'success') {
                            currentSwitch.checked = !currentSwitch.checked;
                            modal.hide();
                        } else {
                            alert('회원 상태 변경에 실패했습니다.');
                        }
                    },
                    error: function() {
                        alert('서버 오류가 발생했습니다.');
                    }
                });
            }
            modal.hide();
        };

        // 모달의 "아니요" 버튼과 닫기 버튼에 이벤트 리스너 추가
        const cancelButton = document.querySelector('#statusModal .btn-secondary');
        const closeButton = document.querySelector('#statusModal .btn-close');
        
        const closeModal = () => {
            modal.hide();
            currentSwitch = null;
        };

        cancelButton.onclick = closeModal;
        closeButton.onclick = closeModal;
    });
        // 검색 AJAX로 구현하자
        
        
    	
    document.addEventListener('click', function (e) {
    const target = e.target;
    if (target.classList.contains('dropdown-toggle')) {
        const dropdown = new bootstrap.Dropdown(target);
        dropdown.toggle();
    	}
    });
    document.addEventListener('click', function (e) {
        const target = e.target;
        if (target.classList.contains('dropdown-menu')) {	
            const dropdown = new bootstrap.Dropdown(target);
            dropdown.toggle();
        }
    });
        
        
        
        
        
        
    </script>
</body>
</html>